// <auto-generated />
using System;
using MeuCampeonatoAPI.Domain.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace SimuladorCampeonatoAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221021003401_Seccond")]
    partial class Seccond
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MeuCampeonatoAPI.Domain.Entities.Campeonato", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Campeonatos");
                });

            modelBuilder.Entity("MeuCampeonatoAPI.Domain.Entities.Time", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Times");
                });

            modelBuilder.Entity("MeuCampeonatoAPI.Domain.Entities.TimeCampeonato", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampeonatoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataInscricao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FoiEliminado")
                        .HasColumnType("bit");

                    b.Property<short>("PenaltisTotais")
                        .HasColumnType("smallint");

                    b.Property<short>("PontuacaoTotal")
                        .HasColumnType("smallint");

                    b.Property<Guid>("TimeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TimeId", "CampeonatoId")
                        .IsUnique();

                    b.ToTable("TimeCampeonatos");
                });

            modelBuilder.Entity("MeuCampeonatoAPI.Domain.Entities.TimeCampeonato", b =>
                {
                    b.HasOne("MeuCampeonatoAPI.Domain.Entities.Time", "Time")
                        .WithMany()
                        .HasForeignKey("TimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Time");
                });
#pragma warning restore 612, 618
        }
    }
}
